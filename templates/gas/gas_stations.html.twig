{% extends 'base.html.twig' %}

{% block title %}
    Gas Stations
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"/>
{% endblock %}

{% block body %}
    <div id="map" class="gas_stations"></div>
{% endblock %}

{% block javascripts %}
    <script type="application/javascript" src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>
    <script>
        const defaultCoordinate = {'latitude': 48.855680, 'longitude': 2.347045};
        var map, infoWindow, markers = [], markersInArray = [], stations, object = {}, low_prices = {}
        var marker = 'marker'

        map = L.map('map').setView([defaultCoordinate.latitude, defaultCoordinate.longitude], 12)

        map.scrollWheelZoom.disable()

        L.control.scale().addTo(map);

        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
            maxZoom: 18,
            id: 'mapbox/outdoors-v11',
            tileSize: 512,
            zoomOffset: -1,
            accessToken: '{{ KEY }}'
        }).addTo(map)

        var group = L.featureGroup().addTo(map)

        var normal = L.icon({
            iconUrl: '{{ asset('asset/img/gas/marker/normal.png') }}',
        })

        var user = L.icon({
            iconUrl: '{{ asset('asset/img/gas/marker/user.png') }}',
        })

        var low = L.icon({
            iconUrl: '{{ asset('asset/img/gas/marker/low.png') }}',
        })

        map.locate({setView: true, maxZoom: 13})

        function getGasStationId() {
            $.get({
                url: '{{ path('ajax_gas_station_id') }}',
                type: 'GET',
                async: true,
                data: {'station_id': {{ sid }}},
                success: function (element, statut) {
                    $('.gas_station_popup').remove()
                    var content = "<div class='gas_station_popup'><b class='gas_station_popup_close' onclick='$(\".gas_station_popup\").remove();'></b>" + element['content'] + "</div>"
                    $('#gas_stations').append(content)
                    $.each(low_prices, function(key, value) {
                        $('.' + value[0] + '.' + value[2]).css('color', 'green')
                    })
                    map.setView([parseFloat(element['latitude']), parseFloat(element['longitude'])])
                }
            })
        }

        function getGasStations(latitude, longitude, radius) {
            $.get({
                url: '{{ path('ajax_gas_stations_map') }}',
                type: 'GET',
                async: true,
                data: {'latitude': latitude, 'longitude': longitude, 'radius': radius - (radius/3)},
                success: function (elements, statut) {
                    markersInArray = {}
                    low_prices = {}
                    {% for type in gas_types %}
                    low_prices['{{ type.id }}'] = [null, 1000]
                    {% endfor %}

                    group.clearLayers();
                    const objects = JSON.parse(elements)

                    $.each(objects, function(index, element) {
                        $.each(element.prices, function (index, price) {
                            if (parseFloat(price.value) <= parseFloat(low_prices[price.type.id][1])) {
                                low_prices[price.type.id][0] = element.id
                                low_prices[price.type.id][1] = price.value
                                low_prices[price.type.id][2] = price.type.id
                            }
                        })

                        object[marker + element.id] = L.marker([parseFloat(element.address.latitude), parseFloat(element.address.longitude)], {icon: normal}).addTo(group).on('click', function(e) {
                            $.get({
                                url: '{{ path('ajax_gas_station_id') }}',
                                type: 'GET',
                                async: true,
                                data: {'station_id': element.id},
                                success: function (element, statut) {
                                    $('.gas_station_popup').remove()
                                    var content = "<div class='gas_station_popup'><b class='gas_station_popup_close' onclick='$(\".gas_station_popup\").remove();'></b>" + element['content'] + "</div>"
                                    $('#gas_stations').append(content)
                                    $.each(low_prices, function(key, value) {
                                        $('.' + value[0] + '.' + value[2]).css('color', 'green')
                                    })
                                }
                            })
                        })

                        markersInArray[element.id] = object[marker + element.id]
                    })

                    $.each(low_prices, function (index, element) {
                        var marker = markersInArray[element[0]]
                        if (marker) {
                            marker.setIcon(low)
                            marker.setZIndexOffset(100)
                        }
                        $('.' + element[0] + '.' + element[2]).css('color', 'green')
                    })
                }
            })
        }

        map.on('locationfound', function (e) {
            var radius = e.accuracy;
            L.circle(e.latlng, radius).addTo(map)
            var marker = L.marker(e.latlng).addTo(map)
            if ({{ sid }} == 0) {
                marker.on('click', function(e) {
                    map.setView([parseFloat(e.latlng.lat), parseFloat(e.latlng.lng)])
                })
                return false;
            }

            getGasStationId()
        })

        map.on('locationerror', function (e) {
            map.setZoom(13)
            getGasStations(defaultCoordinate.latitude, defaultCoordinate.longitude, 4316.224161749635)
        })

        map.on('moveend', function (e) {
            const { lat, lng } = e.target.getCenter()

            var mapBoundNorthEast = map.getBounds().getNorthEast()
            mapBoundNorthEast.lng = lng
            var mapDistance = mapBoundNorthEast.distanceTo(map.getCenter())

            getGasStations(lat, lng, mapDistance)
        });

        map.on('zoomend', function (e) {
            const { lat, lng } = e.target.getCenter()

            var mapBoundNorthEast = map.getBounds().getNorthEast()
            mapBoundNorthEast.lng = lng
            var mapDistance = mapBoundNorthEast.distanceTo(map.getCenter())

            getGasStations(lat, lng, mapDistance)
        });

        $('.gas_station_popup_close').click(function () {
            $(".gas_station_popup").remove()
        })

    </script>
{% endblock %}
